.outsideContainer {
    width: 100%;
    height: 100%;

    display: flex;
    flex-direction: column;
}

.container {
    /* width: 100%; */
    height: 100%;

    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;

    overflow-y: scroll;
    padding: 3rem 2rem;
    /* margin-bottom: 2rem; */
}

.container .mainContent {
    width: 100%;
    height: 100%;

    display: grid;
    gap: 1rem;
    
    grid-template-columns: 1fr 50rem 1fr;
    grid-template-rows: auto;
    grid-template-areas:
        ". metadata ."
        ". tags-container ."
        "reactions main-content related"
        ". main-content ."
        ". make-comment ."
        ". comments ."
        "space space space";
}

.container .mainContent .tagsContainer {
    width: auto;
    display: flex;
    flex-direction: row;
    gap: 0.5rem;

    grid-area: tags-container;
}

.container .mainContent .publicationData {
    grid-area: metadata;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.container .mainContent .publicationData .authorContainer {
    display: flex;
    gap: 0.5rem;
    justify-content: center;
    align-items: center;
}

.container .mainContent .publicationData .authorContainer .authorImage {
    width: 2rem;
    height: 2rem;
    background-color: var(--primary);
    mask: url('../../assets/user_icon.svg') no-repeat center;
}

.container .mainContent .publicationData .authorContainer .author {
    font-weight: 500;
    color: var(--soft-black);
}

.container .mainContent .publicationData .editDate {
    font-weight: 400;
    color: var(--soft-black);
}

.container .mainContent .reactionsData {
    grid-area: reactions;
    justify-self: end;

    display: grid;
    row-gap: 1rem;
    column-gap: 0.25rem;

    grid-template-columns: auto auto;
    grid-template-rows: auto auto auto;

    margin-top: 1rem;
}

.container .mainContent .reactionsData p {
    color: var(--dark-gray);
    font-weight: 700;
}

.container .mainContent .publicationContent {
    grid-area: main-content;
}

.container .mainContent .publicationContent .contentContainer {
    padding: 1rem 2rem;
    /* width: 50rem; */
    background-color: var(--light-gray);
    border-radius: 0.5rem;
}

.container .mainContent .publicationContent .contentContainer .markdownEditor {
    background-color: transparent;
}

.container .mainContent .relatedPublications {
    grid-area: related;
}

.container .mainContent .makeCommentContainer {
    grid-area: make-comment;
    
    display: flex;
    flex-direction: column;
    gap: 1rem;

    margin-top: 2rem;
}

.container .mainContent .makeCommentContainer span {
    color: var(--dark-gray);
    font-weight: 400;
}

.container .mainContent .makeCommentContainer textarea {
    background-color: var(--light-gray);
    resize: none;
    border: 0;
    border-radius: 0.5rem;
    padding: 1rem;
    height: 6rem;
    
    color: var(--dark-gray);
}

.container .mainContent .makeCommentContainer textarea:focus {
    outline: none;
}

.container .mainContent .makeCommentContainer .buttonsContainer {
    display: flex;
    gap: 0.5rem;
    justify-content: flex-end;
}

.container .mainContent .makeCommentContainer .buttonsContainer button {
    cursor: pointer;
    transition: transform 0.2s;
}

.container .mainContent .makeCommentContainer .buttonsContainer button:hover {
    transform: scale(1.1);
}

.container .mainContent .makeCommentContainer .buttonsContainer .cancelButton {
    padding: 0.5rem 0.75rem;
    background-color: var(--light-gray);
    color: var(--dark-gray);
    border-radius: 0.5rem;
    border: 0;
    font-weight: 700;
}

.container .mainContent .makeCommentContainer .buttonsContainer .sendButton {
    padding: 0.5rem 0.75rem;
    background-color: var(--secondary);
    color: var(--white);
    border-radius: 0.5rem;
    border: 0;
    font-weight: 700;
}

.container .mainContent .commentContainer {
    grid-area: comments;

    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.container .mainContent .commentContainer h4 {
    color: var(--dark-gray);
}

.container .mainContent .space {
    height: 10rem;
    grid-area: space;
}
